//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: G4PointRat.icc,v 1.4 2006/06/29 18:40:15 gunter Exp $
// GEANT4 tag $Name: geant4-09-03-patch-01 $
//
// --------------------------------------------------------------------
// GEANT 4 inline definitions file
//
// G4PointRat.icc
//
// Implementation of inline methods of G4PointRat
// --------------------------------------------------------------------

inline
G4double G4PointRat::x() const
{
  return pt3d.x();
}

inline
void G4PointRat::setX (G4double Value)
{
  pt3d.setX ( Value );
}

inline
G4double G4PointRat::y() const
{
  return pt3d.y();
}

inline
void G4PointRat::setY (G4double Value)
{
  pt3d.setY ( Value );
}

inline
G4double G4PointRat::z() const
{
  return pt3d.z();
}

inline
void G4PointRat::setZ (G4double Value)
{
  pt3d.setZ ( Value );
}

inline
G4double G4PointRat::w() const
{
  return s;
}

inline
void G4PointRat::setW(G4double Value)
{
  s=Value;
}

inline
G4Point3D G4PointRat::pt() const
{
  return pt3d;
}

inline
G4double G4PointRat::PlaneDistance(const G4Plane3D& Pl) const
{
  return ((Pl.a()*pt3d.x() + Pl.b()*pt3d.y() + Pl.c()*pt3d.z()) - Pl.d());
}

inline
G4int G4PointRat::GetType(void) const
{
  return 4;
}
