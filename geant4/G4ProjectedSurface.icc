//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: G4ProjectedSurface.icc,v 1.5 2006/06/29 18:40:19 gunter Exp $
// GEANT4 tag $Name: geant4-09-03-patch-01 $
//
// --------------------------------------------------------------------
// GEANT 4 inline definitions file
//
// G4ProjectedSurface.icc
//
// Implementation of inline methods of G4ProjectedSurface
// --------------------------------------------------------------------

inline
G4Vector3D G4ProjectedSurface::SurfaceNormal(const G4Point3D&) const
{
  return G4Vector3D(0,0,0);
}

inline
G4int G4ProjectedSurface::GetOrder(G4int direction) const
{
  return order[direction];
}
	
inline
void G4ProjectedSurface::PutOrder(G4int direction, G4int value)		
{
  order[direction]=value;
}

inline
G4int G4ProjectedSurface::Amax(G4int i, G4int j) const
{
  return( (i) > (j) ? (i) : (j) );
}
  
inline
G4int G4ProjectedSurface::Amin(G4int i, G4int j) const
{
  return( (i) < (j) ? (i) : (j) );
}
  
inline
G4int G4ProjectedSurface::AhIndex(G4int j, G4int t, G4int iorder) const
{
  return(( (j) * ((j)+1)/2) + (t) - ((iorder-1) - (j)));
}
