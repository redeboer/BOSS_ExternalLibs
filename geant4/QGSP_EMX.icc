//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
// $Id: QGSP_EMX.icc,v 1.8 2009/11/27 17:28:19 gunter Exp $
// GEANT4 tag $Name: geant4-09-03-patch-01 $
//
//---------------------------------------------------------------------------
//
// ClassName:   QGSP_EMX
//
// Author: 2006  V.Ivanchenko
//
// Modified:
// 18.05.2009 G.Folger: obsoleted
// 20.11.2006 G.Folger: add Tracking Cut for neutrons
// 21.06.2006 V.Ivanchenko crerate from QGSP_EMV
// 26.04.2007 G.Folger 
//        - use HadronPhysicsQGSP, not HadronPhysicsQGSP_EMX
//        - Enable quasielastic for QGS string model
// 16.05.2007 V.Ivanchenko: rename EM builders
//
//----------------------------------------------------------------------------
//

#include "globals.hh"
#include "G4ParticleDefinition.hh"
#include "G4ParticleWithCuts.hh"
#include "G4ProcessManager.hh"
#include "G4ProcessVector.hh"
#include "G4ParticleTypes.hh"
#include "G4ParticleTable.hh"

#include "G4Material.hh"
#include "G4MaterialTable.hh"
#include "G4ios.hh"
#include <iomanip>   

#include "G4DecayPhysics.hh"
#include "G4EmStandardPhysics_option2.hh"
#include "G4EmExtraPhysics.hh"
#include "G4IonPhysics.hh"
#include "G4QStoppingPhysics.hh"
#include "G4HadronElasticPhysics.hh"
#include "G4NeutronTrackingCut.hh"

#include "G4DataQuestionaire.hh"
#include "HadronPhysicsQGSP.hh"

#include "G4WarnPLStatus.hh"

template<class T> TQGSP_EMX<T>::TQGSP_EMX(G4int ver):  T()
{
  G4DataQuestionaire it(photon);
  G4cout << "<<< Geant4 Physics List simulation engine: QGSP_EMX 3.3"<<G4endl;
  G4cout <<G4endl;
  this->defaultCutValue = 7.*mm;  
  this->SetVerboseLevel(ver);

  G4WarnPLStatus obs;
  obs.Replaced("QGSP_EMX","QGSP_BERT_EMX");
  G4Exception(" Crash for usage of replaced physics list");

  // EM Physics
  this->RegisterPhysics( new G4EmStandardPhysics_option2(ver));

  // Synchroton Radiation & GN Physics
  this->RegisterPhysics( new G4EmExtraPhysics("extra EM"));

  // General Physics - i.e. decay
  this->RegisterPhysics( new G4DecayPhysics("decay",ver) );

   // Hadron Elastic scattering
  this-> RegisterPhysics( new G4HadronElasticPhysics("elastic",ver,false));

   // Hadron Physics
   G4bool quasiElastic;
  this->RegisterPhysics(  new HadronPhysicsQGSP("hadron",quasiElastic=true));

  // Stopping Physics
  this->RegisterPhysics( new G4QStoppingPhysics("stopping"));

  // Ion Physics
  this->RegisterPhysics( new G4IonPhysics("ion"));
  
  // Neutron tracking cut
  this->RegisterPhysics( new G4NeutronTrackingCut("Neutron tracking cut", ver));

}

template<class T> TQGSP_EMX<T>::~TQGSP_EMX()
{
}

template<class T> void TQGSP_EMX<T>::SetCuts()
{
  if (this->verboseLevel >1){
    G4cout << "QGSP_EMX::SetCuts:";
  }  
  //  " G4VUserPhysicsList::SetCutsWithDefault" method sets 
  //   the default cut value for all particle types 

  this->SetCutsWithDefault();   
  
//  if (this->verboseLevel >0)
//    G4VUserPhysicsList::DumpCutValuesTable();  
  
}

