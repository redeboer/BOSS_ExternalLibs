//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: G4BSplineSurface.icc,v 1.6 2006/06/29 18:38:14 gunter Exp $
// GEANT4 tag $Name: geant4-09-03-patch-01 $
//
// --------------------------------------------------------------------
// GEANT 4 inline definitions file
//
// G4BSplineSurface.icc
//
// Implementation of inline methods of G4BSplineSurface
// --------------------------------------------------------------------

inline
G4double G4BSplineSurface::GetUHit() const
{
  return Hit->GetU();
}

inline
G4double G4BSplineSurface::GetVHit() const
{
  return Hit->GetV();
}

inline
G4int G4BSplineSurface::MyType() const
{
  return 2;
}

inline
void G4BSplineSurface::Reset()
{
  active=1;
  bezier_list.EmptyList();
  projected_list.EmptyList();
  Intersected=0;
  distance = kInfinity;
}

inline
G4int G4BSplineSurface::GetRows() const
{
  return ctl_points->GetRows();
}

inline
G4int G4BSplineSurface::GetCols() const
{
  return ctl_points->GetCols();
}

inline
G4Point3D G4BSplineSurface::GetControlPoint(G4int a, G4int b) const
{
  return ctl_points->Get3D(a,b);
}

inline
G4int G4BSplineSurface::GetOrder (G4int direction) const
{
  return order[direction];
}

inline
void G4BSplineSurface::PutOrder(G4int direction, G4int value)
{
  order[direction]=value;
}

inline
G4Vector3D G4BSplineSurface::SurfaceNormal(const G4Point3D&) const
{
  return G4Vector3D(0,0,0);
}
