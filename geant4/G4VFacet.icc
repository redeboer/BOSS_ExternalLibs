//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration and of QinetiQ Ltd,   *
// * subject to DEFCON 705 IPR conditions.                            *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
// $Id: G4VFacet.icc,v 1.6 2008/12/18 12:57:32 gunter Exp $
// GEANT4 tag $Name: geant4-09-03-patch-01 $
//
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//
// MODULE:              G4VFacet.icc
//
// Version:             0.B
// Date:                15/06/2005
// Author:              P R Truscott
// Organisation:        QinetiQ Ltd, UK
// Customer:            UK Ministry of Defence : RAO CRP TD Electronic Systems
// Contract:            C/MAT/N03517
//
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//
// CHANGE HISTORY
// --------------
//
// 31 October 2004, P R Truscott, QinetiQ Ltd, UK - Created.
//
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

///////////////////////////////////////////////////////////////////////////////
//
inline G4ThreeVector G4VFacet::GetSurfaceNormal () const
  {return surfaceNormal;}

///////////////////////////////////////////////////////////////////////////////
//
inline G4GeometryType G4VFacet::GetEntityType () const
  {return geometryType;}

///////////////////////////////////////////////////////////////////////////////
//
inline G4bool G4VFacet::IsInside (const G4ThreeVector &p) const
{
  G4ThreeVector D       = p - P0;
  G4double displacement = D.dot(surfaceNormal);
  G4bool inside         = (displacement <= 0.0);
  
  return inside;
}

///////////////////////////////////////////////////////////////////////////////
//
inline G4bool G4VFacet::IsDefined () const
  {return isDefined;}

///////////////////////////////////////////////////////////////////////////////
//
inline size_t G4VFacet::GetVertexIndex (const size_t i) const
{
  if (i < I.size()) { return I[i]; }
  else              { return 999999999; }
}

///////////////////////////////////////////////////////////////////////////////
//
inline size_t G4VFacet::GetNumberOfVertices () const
{
  return nVertices;
}

///////////////////////////////////////////////////////////////////////////////
//
inline void G4VFacet::SetVertexIndex (const size_t i, const size_t j)
  {I[i] = j;}

///////////////////////////////////////////////////////////////////////////////
//
inline G4ThreeVector G4VFacet::GetVertex (size_t i) const
{
  if (i == 0)             { return P0; }
  else if (i < nVertices) { return P[i-1]; }
  else                    { return G4ThreeVector(0.0,0.0,0.0); }
}

///////////////////////////////////////////////////////////////////////////////
//
inline G4ThreeVector G4VFacet::GetCircumcentre () const
  {return circumcentre;}

///////////////////////////////////////////////////////////////////////////////
//
inline G4double G4VFacet::GetRadius () const
  {return radius;}

///////////////////////////////////////////////////////////////////////////////
//
inline G4double G4VFacet::GetRadiusSquared () const
  {return radiusSqr;}
