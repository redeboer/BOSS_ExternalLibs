//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: G4EllipticalCone.icc,v 1.7 2008/11/21 09:26:22 gcosmo Exp $
// GEANT4 tag $Name: geant4-09-03-patch-01 $
//
//
// --------------------------------------------------------------------
// GEANT 4 inline definitions file
//
// G4EllipticalCone.icc
//
// Implementation of inline methods of G4EllipticalCone
// --------------------------------------------------------------------
// Author: Dionysios Anninos
// --------------------------------------------------------------------

inline
G4double G4EllipticalCone::GetSemiAxisMax () const
{
  return ySemiAxis > xSemiAxis ? ySemiAxis : xSemiAxis;
}

inline
G4double G4EllipticalCone::GetSemiAxisX () const
{
  return xSemiAxis;
}

inline
G4double G4EllipticalCone::GetSemiAxisY () const
{
  return ySemiAxis;
}

inline
G4double G4EllipticalCone::GetZMax() const
{
  return zheight;
}

inline
G4double G4EllipticalCone::GetZTopCut() const
{
  return zTopCut;
}

inline
void G4EllipticalCone::SetSemiAxis (G4double newxSemiAxis,
                                    G4double newySemiAxis,
                                    G4double newzMax)
{
  xSemiAxis = newxSemiAxis; 
  ySemiAxis = newySemiAxis; 
  zheight   = newzMax;
  semiAxisMax = xSemiAxis > ySemiAxis ? xSemiAxis : ySemiAxis;
  if (zTopCut > +zheight) { zTopCut = +zheight; }
}

inline
void G4EllipticalCone::SetZCut (G4double newzTopCut)
{
  if (newzTopCut > +zheight)
    { zTopCut = +zheight; }
  else
    { zTopCut = newzTopCut; }
}

inline
G4double G4EllipticalCone::GetCubicVolume()
{
  if(fCubicVolume != 0 ) {;}
  else
  {
    if (zTopCut > +zheight )
    {
      fCubicVolume = (8./3.)*pi*xSemiAxis*ySemiAxis*zheight*zheight*zheight;
    }
    else 
    {   
      fCubicVolume = pi*xSemiAxis*ySemiAxis*
                    (2./3.*std::pow(zTopCut,3.)+2.*sqr(zheight)*zTopCut);
    }
  }
  return fCubicVolume;
}

inline
G4double G4EllipticalCone::GetSurfaceArea()
{
  if(fSurfaceArea != 0.) {;}
  else   { fSurfaceArea = G4VSolid::GetSurfaceArea(); }
  return fSurfaceArea;
}
