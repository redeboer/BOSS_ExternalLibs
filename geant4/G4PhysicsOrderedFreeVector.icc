//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: G4PhysicsOrderedFreeVector.icc,v 1.9 2009/06/25 10:05:26 vnivanch Exp $
// GEANT4 tag $Name: geant4-09-03-patch-01 $
//
////////////////////////////////////////////////////////////////////////
// PhysicsOrderedFreeVector Class Inline Functions Definitions
////////////////////////////////////////////////////////////////////////
//
// File:	G4PhysicsOrderedFreeVector.icc
// Version:	1.0
// Author:      Juliet Armstrong
// mail:        gum@triumf.ca
//
// Updated:
//              2000-11-11 by H.Kurashige
//              > use STL vector for dataVector and binVector
////////////////////////////////////////////////////////////////////////

////////////////////
// Inline methods
////////////////////

inline
G4double G4PhysicsOrderedFreeVector::GetMaxValue()
{
	return dataVector.back();
}

inline
G4double G4PhysicsOrderedFreeVector::GetMinValue()
{
	return dataVector.front();
}

inline
G4double G4PhysicsOrderedFreeVector::GetMaxLowEdgeEnergy()
{
	return binVector.back();
}

inline
G4double G4PhysicsOrderedFreeVector::GetMinLowEdgeEnergy()
{
	return binVector.front();
}

inline
void G4PhysicsOrderedFreeVector::DumpValues()
{
   for (size_t i = 0; i < numberOfNodes; i++)
   {
      G4cout << binVector[i] << "\t" << dataVector[i] << G4endl;
   }
}

inline
size_t G4PhysicsOrderedFreeVector::FindBinLocation(G4double theEnergy) const
{
   G4int n1 = 0;
   G4int n2 = numberOfNodes/2;
   G4int n3 = numberOfNodes - 1;
   while (n1 != n3 - 1)
   {
      if (theEnergy > binVector[n2])
         { n1 = n2; }
      else
         { n3 = n2; }
      n2 = n1 + (n3 - n1 + 1)/2;
   }
   return (size_t)n1;
}
