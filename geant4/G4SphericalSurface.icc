//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: G4SphericalSurface.icc,v 1.4 2006/06/29 18:40:39 gunter Exp $
// GEANT4 tag $Name: geant4-09-03-patch-01 $
//
// --------------------------------------------------------------------
// GEANT 4 inline definitions file
//
// G4SphericalSurface.icc
//
// Implementation of inline methods of G4SphericalSurface
// --------------------------------------------------------------------

inline
G4int G4SphericalSurface::operator==( const G4SphericalSurface& s )
{
  return origin  == s.origin  &&  
  x_axis  == s.x_axis  &&
  z_axis  == s.z_axis  &&
  radius  == s.radius  && 
  phi_1   == s.phi_1   &&
  phi_2   == s.phi_2   &&
  theta_1 == s.theta_1 &&
  theta_2 == s.theta_2;
}   

inline
G4String G4SphericalSurface::GetEntityType() const
{
  return G4String("Spherical_Surface");
}

inline
void G4SphericalSurface::Comp(G4Vector3D& v, G4Point3D& min , G4Point3D& max)
{
  if(v.x() > max.x()) max.setX(v.x());
  if(v.y() > max.y()) max.setY(v.y());
  if(v.z() > max.z()) max.setZ(v.z());

  if(v.x() < min.x()) min.setX(v.x());
  if(v.y() < min.y()) min.setY(v.y());
  if(v.z() < min.z()) min.setZ(v.z());
}

inline
G4Vector3D G4SphericalSurface::GetXAxis() const
{
  return x_axis;
}

inline
G4Vector3D G4SphericalSurface::GetZAxis() const
{
  return z_axis;
}

inline
G4double G4SphericalSurface::GetRadius() const
{
  return radius;
}

inline
G4double G4SphericalSurface::GetPhi1() const
{
  return phi_1;
}

inline
G4double G4SphericalSurface::GetPhi2() const
{
  return phi_2;
}

inline
G4double G4SphericalSurface::GetTheta1() const
{
  return theta_1;
}

inline
G4double G4SphericalSurface::GetTheta2() const
{
  return theta_2;
}
